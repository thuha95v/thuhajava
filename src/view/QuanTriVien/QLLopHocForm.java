/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.QuanTriVien;

import controller.QLLopHocController;
import controller.QLMonHocController;
import controller.QLPhongHocController;
import java.awt.Color;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.LopHoc;
import model.MonHoc;
import model.PhongHoc;

/**
 *
 * @author admin
 */
public class QLLopHocForm extends javax.swing.JFrame {

    private int selectedRow;
    private DefaultTableModel tblModel = new DefaultTableModel();
    QLLopHocController qllhc = new QLLopHocController();
    List<LopHoc> listLH = new ArrayList<>();
    List<MonHoc> listMH = new ArrayList<>();
    List<PhongHoc> listPH = new ArrayList<>();

    /**
     * Creates new form LopHocView
     */
    public QLLopHocForm() throws ParseException {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        initCombobox();
        initTable();
        fillTable();
    }

    private void initTable() {
        String[] columns = new String[]{"STT", "Mã Lớp", "Tên Lớp", "Tên Môn Học", "Thứ ",
            "Tiết Học", "Ngày Bắt Đầu", "Sĩ Số", "Tên Phòng"};
        tblModel.setColumnIdentifiers(columns);
        tblLopHoc.setModel(tblModel);
    }

    private void fillTable() {
        try {
            tblModel.setRowCount(0);
            listLH = qllhc.getListLH();
            int index = 1;
            for (LopHoc lh : listLH) {
                MonHoc mh = new QLMonHocController().getMH(lh.getMaMH());
                PhongHoc ph = new QLPhongHocController().getPH(lh.getMaPH());
                tblModel.addRow(new Object[]{index++, lh.getMaLH(), lh.getTenLH(), mh.getTenMH(), lh.getThu(), lh.getTiet(),
                    lh.getNgayBatDau(), lh.getSiSo(), ph.getTenPH()});
            }
            tblModel.fireTableDataChanged();
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
    }

    private void initCombobox() throws ParseException {
        listMH = new QLMonHocController().getListMH();
        for (MonHoc mh : listMH) {
            cbxMaMH.addItem(mh.getMaMH());
        }

        listPH = new QLPhongHocController().getListPH();
        for (PhongHoc ph : listPH) {
            cbxMaPH.addItem(ph.getMaPH());
        }
    }

    private void resetData() {
        String empty = "";
        txtMaLH.setText(empty);
        txtMaLH.setBackground(null);
        txtTenLH.setText(empty);
        txtTenLH.setBackground(null);
        txtTiet.setText(empty);
        txtTiet.setBackground(null);
        txtNgayBatDau.setText(empty);
        txtNgayBatDau.setBackground(null);
        txtSiSo.setText(empty);
        txtSiSo.setBackground(null);
    }

    private boolean isHadEmptyFields() {
        StringBuffer sb = new StringBuffer();
        if (txtMaLH.getText().isBlank()) {
            sb.append("Mã lớp không đc để trống\n");
            txtMaLH.setBackground(Color.CYAN);
        } else {
            txtMaLH.setBackground(null);
        }
        if (txtTenLH.getText().isBlank()) {
            sb.append("Tên lớp không đc để trống\n");
            txtTenLH.setBackground(Color.CYAN);
        } else {
            txtTenLH.setBackground(null);
        }
        if (txtTiet.getText().isBlank()) {
            sb.append("Tiết học đc để trống\n");
            txtTiet.setBackground(Color.CYAN);
        } else {
            txtTiet.setBackground(null);
        }
        if (txtSiSo.getText().isBlank()) {
            sb.append("Sĩ số không đc để trống\n");
            txtSiSo.setBackground(Color.CYAN);
        } else {
            txtSiSo.setBackground(null);
        }
        if (txtNgayBatDau.getText().isBlank()) {
            sb.append("Ngày bắt đầu không đc để trống\n");
            txtNgayBatDau.setBackground(Color.CYAN);
        } else {
            txtNgayBatDau.setBackground(null);
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb, "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaLH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenLH = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTiet = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNgayBatDau = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSiSo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnTaiLai = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLopHoc = new javax.swing.JTable();
        lbThu = new javax.swing.JLabel();
        cbxMaPH = new javax.swing.JComboBox<>();
        lbTenMon = new javax.swing.JLabel();
        lbTenPhong = new javax.swing.JLabel();
        cbxMaMH = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("QUẢN LÝ LỚP HỌC");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Mã Lớp: ");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Tên Lớp:");

        txtTenLH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenLHActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Tiết Học: ");

        jLabel5.setText("Ngày Bắt Đầu: ");

        jLabel6.setText("Sĩ Số: ");

        jLabel7.setText("Mã Môn Học: ");

        jLabel8.setText("Mã Phòng: ");

        jLabel9.setText("Thứ: ");

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconadd16.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/qli16.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icondelete16.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconsearch16.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnTaiLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconupdate16.png"))); // NOI18N
        btnTaiLai.setText("Tải Lại");
        btnTaiLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaiLaiActionPerformed(evt);
            }
        });

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconthoat16.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        tblLopHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Lớp", "Tên Lớp", "Mã MH", "Tên MH", "Mã Phòng", "Tiết Học", "Thứ"
            }
        ));
        tblLopHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLopHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLopHoc);

        lbThu.setText("...");

        cbxMaPH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxMaPHItemStateChanged(evt);
            }
        });

        lbTenMon.setText("Tên môn học");

        lbTenPhong.setText("Tên phòng");

        cbxMaMH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxMaMHItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaLH, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtNgayBatDau)
                                        .addComponent(txtTiet, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtTenLH, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)))
                                .addGap(106, 106, 106)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(11, 11, 11)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel6)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(40, 40, 40)
                                            .addComponent(jLabel9)))))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbThu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSiSo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxMaPH, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxMaMH, 0, 70, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 103, Short.MAX_VALUE))
                                    .addComponent(lbTenMon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(btnThem)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTimKiem)
                .addGap(18, 18, 18)
                .addComponent(btnTaiLai)
                .addGap(18, 18, 18)
                .addComponent(btnThoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaLH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(lbTenMon)
                    .addComponent(cbxMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenLH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(cbxMaPH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTenPhong))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtSiSo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(lbThu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnTimKiem)
                    .addComponent(btnTaiLai)
                    .addComponent(btnThoat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenLHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenLHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenLHActionPerformed

    private void btnTaiLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaiLaiActionPerformed
        resetData();
        fillTable();
    }//GEN-LAST:event_btnTaiLaiActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        int choice = JOptionPane.showConfirmDialog(this,
                "Bạn có chắc muốn thực hiện hay không?",
                "Hỏi", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        }
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int choice = JOptionPane.showConfirmDialog(this,
                "Bạn có muốn thực hiện chức năng này không?",
                "Hỏi", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        }
        selectedRow = tblLopHoc.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                LopHoc lopHoc = listLH.get(selectedRow);
                qllhc.xoaLH(lopHoc.getMaLH());
            } catch (ParseException ex) {
                Logger.getLogger(QLLopHocForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn 1 dòng để xóa");
        }
        fillTable();
        resetData();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (!isHadEmptyFields()) {
            int choice = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc muốn thực hiện hay không?",
                    "Hỏi", JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.NO_OPTION) {
                return;
            }
            LopHoc lh = null;
            try {
                String maLH = txtMaLH.getText().trim();
                String tenLH = txtTenLH.getText().trim();
                String tiet = txtTiet.getText().trim();
                String ngayBD = txtNgayBatDau.getText().trim();
                String siSo = txtSiSo.getText().trim();
                String maMH = cbxMaMH.getSelectedItem().toString();
                String maPH = cbxMaPH.getSelectedItem().toString();
                lh = new LopHoc(maLH, tenLH, ngayBD, tiet, Integer.parseInt(siSo), maMH, maPH);
                if (qllhc.themLH(lh)) {
                    resetData();
                }
            } catch (ParseException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Nhập sai định dạng ngày (dd/MM/yyyy)");
            }
        }
        fillTable();
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblLopHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLopHocMouseClicked
        selectedRow = tblLopHoc.getSelectedRow();
        if (selectedRow >= 0) {
            LopHoc lh = listLH.get(selectedRow);
            txtMaLH.setText(lh.getMaLH());
            txtTenLH.setText(lh.getTenLH());
            txtTiet.setText(lh.getTiet());
            txtNgayBatDau.setText(lh.getNgayBatDau() + "");
            cbxMaMH.setSelectedItem(lh.getMaMH());
            cbxMaPH.setSelectedItem(lh.getMaPH());
            txtSiSo.setText(lh.getSiSo() + "");
            lbThu.setText(lh.getThu());
        }
    }//GEN-LAST:event_tblLopHocMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (!isHadEmptyFields()) {
            try {
                int choice = JOptionPane.showConfirmDialog(this,
                        "Bạn có muốn thực hiện chức năng này không?",
                        "Hỏi", JOptionPane.YES_NO_OPTION);
                if (choice == JOptionPane.NO_OPTION) {
                    return;
                }
                String maLH = txtMaLH.getText();
                String tenLH = txtTenLH.getText();
                String maMH = txtTenLH.getText();
                String maPH = txtTenLH.getText();
                String tiet = txtTiet.getText();
                String siSo = txtSiSo.getText();
                String ngayBD = txtNgayBatDau.getText();
                LopHoc lh = new LopHoc(maLH, tenLH, ngayBD, tiet, Integer.parseInt(siSo), maMH, maPH);
                if (qllhc.timKiemByMaLH(maLH) != null) {
                    qllhc.suaLH(lh);
                    resetData();
                }
            } catch (ParseException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "Nhập sai định dạng ngày (dd/MM/yyyy)");
            }
        }
        fillTable();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        if (!(txtMaLH.getText().isBlank())) {
            txtMaLH.setBackground(null);
            String maLH = txtMaLH.getText();
            LopHoc lh = new LopHoc();
            try {
                lh = qllhc.timKiemByMaLH(maLH);
            } catch (ParseException ex) {
                Logger.getLogger(QLLopHocForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (lh != null) {
                txtMaLH.setText(lh.getMaLH());
                txtTenLH.setText(lh.getTenLH());
                cbxMaMH.setSelectedItem(lh.getMaMH());
                cbxMaPH.setSelectedItem(lh.getMaPH());
                txtSiSo.setText("" + lh.getSiSo());
                txtTiet.setText(lh.getTiet());
                txtNgayBatDau.setText(lh.getNgayBatDau());
                lbThu.setText(lh.getThu());
            }
        } else {
            txtMaLH.setBackground(Color.CYAN);
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập Mã lớp học cần tìm");
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void cbxMaMHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxMaMHItemStateChanged
        String maMH = cbxMaMH.getSelectedItem().toString();
        MonHoc mh = new MonHoc();
        try {
            mh = new QLMonHocController().getMH(maMH);
        } catch (ParseException ex) {
            Logger.getLogger(QLLopHocForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        lbTenMon.setText(mh.getTenMH());
    }//GEN-LAST:event_cbxMaMHItemStateChanged

    private void cbxMaPHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxMaPHItemStateChanged
        String maPH = cbxMaPH.getSelectedItem().toString();
        PhongHoc ph = new QLPhongHocController().getPH(maPH);
        lbTenPhong.setText(ph.getTenPH());
    }//GEN-LAST:event_cbxMaPHItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLLopHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLLopHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLLopHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLLopHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new QLLopHocForm().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(QLLopHocForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaiLai;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxMaMH;
    private javax.swing.JComboBox<String> cbxMaPH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbTenMon;
    private javax.swing.JLabel lbTenPhong;
    private javax.swing.JLabel lbThu;
    private javax.swing.JTable tblLopHoc;
    private javax.swing.JTextField txtMaLH;
    private javax.swing.JTextField txtNgayBatDau;
    private javax.swing.JTextField txtSiSo;
    private javax.swing.JTextField txtTenLH;
    private javax.swing.JTextField txtTiet;
    // End of variables declaration//GEN-END:variables
}
