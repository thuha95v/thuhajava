/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.QuanTriVien;

import controller.QLMonHocController;
import java.awt.Color;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MonHoc;

/**
 *
 * @author admin
 */
public class QLMonHocForm extends javax.swing.JFrame {

    DefaultTableModel tblModel = new DefaultTableModel();
    QLMonHocController qlmhc = new QLMonHocController();
    List<MonHoc> listmh = new ArrayList<>();

    private int selectedRow;

    /**
     * Creates new form MonHocView
     */
    public QLMonHocForm() throws ParseException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        initTable();
        fillTable();
    }

    private void initTable() {
        String[] columns = new String[]{"STT", "Mã Môn Học", "Tên Môn Học", "Số Tín Chỉ"};
        tblModel.setColumnIdentifiers(columns);
        tblMonHoc.setModel(tblModel);
    }

    private void fillTable() throws ParseException {
        tblModel.setRowCount(0);
        listmh = qlmhc.getListMH();
        int index = 1;
        for (MonHoc monhoc : listmh) {
            tblModel.addRow(new Object[]{index++, monhoc.getMaMH(), monhoc.getTenMH(), monhoc.getSoTinChi()});
        }
        tblModel.fireTableDataChanged();
    }

    private void resetData() {
        String empty = "";
        txtMaMH.setText(empty);
        txtMaMH.setBackground(null);
        txtTenMH.setText(empty);
        txtTenMH.setBackground(null);
        txtSTC.setText(empty);
        txtSTC.setBackground(null);

    }

    private boolean isHadEmptyFields() {
        StringBuffer sb = new StringBuffer();
        if (txtMaMH.getText().equals("")) {
            sb.append("Mã môn học không đc để trống\n");
            txtMaMH.setBackground(Color.CYAN);
        } else {
            txtMaMH.setBackground(null);
        }
        if (txtTenMH.getText().equals("")) {
            sb.append("Tên môn học không đc để trống\n");
            txtTenMH.setBackground(Color.CYAN);
        } else {
            txtTenMH.setBackground(null);
        }
        if (txtSTC.getText().equals("")) {
            sb.append("Số tín chỉ không đc để trống\n");
            txtSTC.setBackground(Color.CYAN);
        } else {
            txtSTC.setBackground(null);
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb, "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaMH = new javax.swing.JTextField();
        txtTenMH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSTC = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMonHoc = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mã Môn Học: ");

        jLabel2.setText("Tên Môn Học: ");

        jLabel3.setText("Số Tín Chỉ: ");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("MÔN HỌC");

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/qli16.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icondelete16.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconsearch16.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconupdate16.png"))); // NOI18N
        btnReset.setText("Tải Lại");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconthoat16.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        tblMonHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Môn Học", "Tên Môn Học", "Số Tín Chỉ"
            }
        ));
        tblMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMonHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMonHoc);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/iconadd16.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem)
                                .addGap(18, 18, 18)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTimKiem)
                                .addGap(18, 18, 18)
                                .addComponent(btnReset)
                                .addGap(18, 18, 18)
                                .addComponent(btnThoat)
                                .addGap(0, 10, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtSTC, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                            .addComponent(txtTenMH)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtSTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTenMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnTimKiem)
                    .addComponent(btnReset)
                    .addComponent(btnThoat)
                    .addComponent(btnThem))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetData();
        try {
            fillTable();
        } catch (ParseException ex) {
            Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        int choice = JOptionPane.showConfirmDialog(this,
                "Bạn có muốn thực hiện chức năng này không?",
                "Hỏi", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        }
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (!isHadEmptyFields()) {
            int choice = JOptionPane.showConfirmDialog(this,
                    "Bạn có muốn thực hiện chức năng này không?",
                    "Hỏi", JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.NO_OPTION) {
                return;
            }
            String maMH = txtMaMH.getText();
            String tenMH = txtTenMH.getText();
            String soTinChi = txtSTC.getText();
            MonHoc mh = new MonHoc(maMH, tenMH, Integer.parseInt(soTinChi));
            try {
                if (qlmhc.themMH(mh)) {
                    resetData();
                }
            } catch (ParseException ex) {
                Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            fillTable();
        } catch (ParseException ex) {
            Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (!isHadEmptyFields()) {
            int choice = JOptionPane.showConfirmDialog(this,
                    "Bạn có muốn thực hiện chức năng này không?",
                    "Hỏi", JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.NO_OPTION) {
                return;
            }
            String maMH = txtMaMH.getText();
            String tenMH = txtTenMH.getText();
            String soTinChi = txtSTC.getText();
            MonHoc mh = new MonHoc(maMH, tenMH, Integer.parseInt(soTinChi));
            try {
                if (qlmhc.timKiemByMaMH(maMH) != null) {
                    qlmhc.suaMH(mh);
                    resetData();
                }
            } catch (ParseException ex) {
                Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            fillTable();
        } catch (ParseException ex) {
            Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMonHocMouseClicked
        selectedRow = tblMonHoc.getSelectedRow();
        if (selectedRow >= 0) {
            MonHoc monHoc = listmh.get(selectedRow);
            txtMaMH.setText(monHoc.getMaMH());
            txtTenMH.setText(monHoc.getTenMH());
            txtSTC.setText("" + monHoc.getSoTinChi());
        }
    }//GEN-LAST:event_tblMonHocMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        selectedRow = tblMonHoc.getSelectedRow();
        if (selectedRow >= 0) {
            int choice = JOptionPane.showConfirmDialog(this,
                    "Bạn có muốn thực hiện chức năng này không?",
                    "Hỏi", JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.NO_OPTION) {
                return;
            }
            MonHoc monHoc = listmh.get(selectedRow);
            try {
                qlmhc.xoaMH(monHoc.getMaMH());
            } catch (ParseException ex) {
                Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn dòng cần xóa");
        }

        try {
            fillTable();
        } catch (ParseException ex) {
            Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        resetData();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        if (!(txtMaMH.getText().isBlank())) {
            txtMaMH.setBackground(null);
            String maMH = txtMaMH.getText();
            MonHoc mh = null;
            try {
                mh = qlmhc.timKiemByMaMH(maMH);
            } catch (ParseException ex) {
                Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (mh != null) {
                txtTenMH.setText(mh.getTenMH());
                txtSTC.setText("" + mh.getSoTinChi());
            }
        } else {
            txtMaMH.setBackground(Color.CYAN);
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập Mã môn học cần tìm");
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLMonHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLMonHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLMonHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLMonHocForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new QLMonHocForm().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(QLMonHocForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblMonHoc;
    private javax.swing.JTextField txtMaMH;
    private javax.swing.JTextField txtSTC;
    private javax.swing.JTextField txtTenMH;
    // End of variables declaration//GEN-END:variables
}
